-- V31nc : GUI to LUA V1

local Table = _G.Table
local Player = game:GetService("Players").LocalPlayer
local TweenService = game:GetService("TweenService")
local AnimationLibrary = Table.AnimationLibrary
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/shittystuffs/shittyhiddenstuffs/main/NotificationLibrary"))()
local ClickSound = Table.GuiStatus.ClickSound

function StringToColor3(ToConvert)
	local ColorString = tostring(ToConvert)
	local ColorR, ColorG, ColorB = ColorString:match("(%d+), (%d+), (%d+)")
	ColorR, ColorG, ColorB = tonumber(ColorR),tonumber(ColorG),tonumber(ColorB)
	return ColorR/255,ColorG/255,ColorB/255
end

-- Instances:

local Settings = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local SectionInfo = Instance.new("Frame")
local UIStroke = Instance.new("UIStroke")
local UICorner = Instance.new("UICorner")
local UIListLayout_2 = Instance.new("UIListLayout")
local SectionName = Instance.new("TextLabel")
local ImageLabel = Instance.new("ImageLabel")
local BottomFrame = Instance.new("Frame")
local Informations = Instance.new("Frame")
local UIStroke_2 = Instance.new("UIStroke")
local UICorner_2 = Instance.new("UICorner")
local UIListLayout_3 = Instance.new("UIListLayout")
local SectionInfo_2 = Instance.new("Frame")
local UIListLayout_4 = Instance.new("UIListLayout")
local SectionName_2 = Instance.new("TextLabel")
local ImageLabel_2 = Instance.new("ImageLabel")
local ScrollingFrame = Instance.new("ScrollingFrame")
local Credits = Instance.new("TextLabel")
local UIListLayout_5 = Instance.new("UIListLayout")
local UIListLayout_6 = Instance.new("UIListLayout")
local Settings_2 = Instance.new("Frame")
local UIListLayout_7 = Instance.new("UIListLayout")
local ScrollingFrame_2 = Instance.new("ScrollingFrame")
local UIListLayout_8 = Instance.new("UIListLayout")
local LabelTemplate = Instance.new("TextLabel")
local Type = Instance.new("StringValue")
local ButtonsTemplate = Instance.new("Frame")
local Type_2 = Instance.new("StringValue")
local SettingsName = Instance.new("TextLabel")
local UIListLayout_9 = Instance.new("UIListLayout")
local Button1 = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local UIStroke_3 = Instance.new("UIStroke")
local Button2 = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIStroke_4 = Instance.new("UIStroke")
local TextBoxTemplate = Instance.new("Frame")
local Type_3 = Instance.new("StringValue")
local SettingsName_2 = Instance.new("TextLabel")
local UIListLayout_10 = Instance.new("UIListLayout")
local TextBoxParent = Instance.new("Frame")
local TextBox = Instance.new("TextBox")
local UIStroke_5 = Instance.new("UIStroke")
local UICorner_5 = Instance.new("UICorner")
local UIListLayout_11 = Instance.new("UIListLayout")
local ModifyButton = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local UIStroke_6 = Instance.new("UIStroke")
local UICorner_7 = Instance.new("UICorner")
local UIStroke_7 = Instance.new("UIStroke")

--Properties:

Settings.Name = "Settings"
Settings.Parent = game:GetService("CoreGui"):WaitForChild("VexHubFolder").VexHubScreenGui.BackFrame.Wallpaper.MainFrame.WholeFrame.Pages
Settings.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Settings.BackgroundTransparency = 1.000
Settings.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings.BorderSizePixel = 0
Settings.Size = UDim2.new(1, 0, 1, 0)
Settings.Visible = false

UIListLayout.Parent = Settings
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout.Padding = UDim.new(0, 5)

SectionInfo.Name = "SectionInfo"
SectionInfo.Parent = Settings
SectionInfo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionInfo.BackgroundTransparency = 1.000
SectionInfo.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionInfo.BorderSizePixel = 0
SectionInfo.LayoutOrder = 1
SectionInfo.Position = UDim2.new(0.222222224, 0, 0.125, 0)
SectionInfo.Size = UDim2.new(0.949999988, 0, 0, 20)

UIStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke.Thickness = 0.700
UIStroke.Transparency = 0.800
UIStroke.Parent = SectionInfo

UICorner.CornerRadius = UDim.new(0.200000003, 0)
UICorner.Parent = SectionInfo

UIListLayout_2.Parent = SectionInfo
UIListLayout_2.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_2.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_2.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_2.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_2.Padding = UDim.new(0, 5)

SectionName.Name = "SectionName"
SectionName.Parent = SectionInfo
SectionName.AutomaticSize = Enum.AutomaticSize.X
SectionName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionName.BackgroundTransparency = 1.000
SectionName.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionName.BorderSizePixel = 0
SectionName.LayoutOrder = 2
SectionName.Size = UDim2.new(0, 0, 0, 20)
SectionName.Font = Enum.Font[Table.GuiSettings.GuiFont.Medium]
SectionName.RichText = true
SectionName.Text = "Settings"
SectionName.TextColor3 = Color3.fromRGB(255, 255, 255)
SectionName.TextSize = 13.000
SectionName.TextWrapped = true

ImageLabel.Parent = SectionInfo
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.LayoutOrder = 1
ImageLabel.Size = UDim2.new(0, 20, 0, 20)
ImageLabel.Image = "http://www.roblox.com/asset/?id=11592827868"

BottomFrame.Name = "BottomFrame"
BottomFrame.Parent = Settings
BottomFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BottomFrame.BackgroundTransparency = 1.000
BottomFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
BottomFrame.BorderSizePixel = 0
BottomFrame.LayoutOrder = 2
BottomFrame.Size = UDim2.new(0.949999988, 0, 0, 155)

Informations.Name = "Informations"
Informations.Parent = BottomFrame
Informations.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Informations.BackgroundTransparency = 1.000
Informations.BorderColor3 = Color3.fromRGB(0, 0, 0)
Informations.BorderSizePixel = 0
Informations.LayoutOrder = 2
Informations.Position = UDim2.new(0.579334199, 0, 0.0263157897, 0)
Informations.Size = UDim2.new(0, 130, 0, 155)

UIStroke_2.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_2.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_2.Thickness = 0.700
UIStroke_2.Transparency = 0.800
UIStroke_2.Parent = Informations

UICorner_2.CornerRadius = UDim.new(0.0500000007, 0)
UICorner_2.Parent = Informations

UIListLayout_3.Parent = Informations
UIListLayout_3.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_3.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_3.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_3.Padding = UDim.new(0, 3)

SectionInfo_2.Name = "SectionInfo"
SectionInfo_2.Parent = Informations
SectionInfo_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionInfo_2.BackgroundTransparency = 1.000
SectionInfo_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionInfo_2.BorderSizePixel = 0
SectionInfo_2.LayoutOrder = 1
SectionInfo_2.Position = UDim2.new(0.222222224, 0, 0.125, 0)
SectionInfo_2.Size = UDim2.new(1, 0, 0, 20)

UIListLayout_4.Parent = SectionInfo_2
UIListLayout_4.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_4.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_4.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_4.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_4.Padding = UDim.new(0, 5)

SectionName_2.Name = "SectionName"
SectionName_2.Parent = SectionInfo_2
SectionName_2.AutomaticSize = Enum.AutomaticSize.X
SectionName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SectionName_2.BackgroundTransparency = 1.000
SectionName_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
SectionName_2.BorderSizePixel = 0
SectionName_2.LayoutOrder = 2
SectionName_2.Size = UDim2.new(0, 0, 0, 20)
SectionName_2.Font = Enum.Font[Table.GuiSettings.GuiFont.Medium]
SectionName_2.RichText = true
SectionName_2.Text = "Information"
SectionName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
SectionName_2.TextSize = 13.000
SectionName_2.TextWrapped = true

ImageLabel_2.Parent = SectionInfo_2
ImageLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel_2.BackgroundTransparency = 1.000
ImageLabel_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel_2.BorderSizePixel = 0
ImageLabel_2.LayoutOrder = 1
ImageLabel_2.Size = UDim2.new(0, 20, 0, 20)
ImageLabel_2.Image = "rbxassetid://17682300750"

ScrollingFrame.Parent = Informations
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame.BackgroundTransparency = 1.000
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.LayoutOrder = 2
ScrollingFrame.Size = UDim2.new(1, 0, 0, 125)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame.ScrollBarThickness = 2

Credits.Name = "Credits"
Credits.Parent = ScrollingFrame
Credits.AutomaticSize = Enum.AutomaticSize.Y
Credits.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Credits.BackgroundTransparency = 1.000
Credits.BorderColor3 = Color3.fromRGB(0, 0, 0)
Credits.BorderSizePixel = 0
Credits.RichText = true
Credits.Size = UDim2.new(0.95, 0, 0, 0)
Credits.Font = Enum.Font[Table.GuiSettings.GuiFont.Regular]
Credits.Text = Table.GuiStatus.Credits
Credits.TextColor3 = Color3.fromRGB(255, 255, 255)
Credits.TextSize = 10.000
Credits.TextWrapped = true
Credits.TextXAlignment = Enum.TextXAlignment.Left

UIListLayout_5.Parent = ScrollingFrame
UIListLayout_5.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_5.SortOrder = Enum.SortOrder.LayoutOrder

UIListLayout_6.Parent = BottomFrame
UIListLayout_6.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_6.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_6.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_6.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_6.Padding = UDim.new(0, 5)

Settings_2.Name = "Settings"
Settings_2.Parent = BottomFrame
Settings_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Settings_2.BackgroundTransparency = 1.000
Settings_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Settings_2.BorderSizePixel = 0
Settings_2.LayoutOrder = 1
Settings_2.Position = UDim2.new(0.0925372243, 0, 0.0263157897, 0)
Settings_2.Size = UDim2.new(0, 180, 0, 155)

UIListLayout_7.Parent = Settings_2
UIListLayout_7.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_7.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_7.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_7.Padding = UDim.new(0, 5)

ScrollingFrame_2.Parent = Settings_2
ScrollingFrame_2.Active = true
ScrollingFrame_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ScrollingFrame_2.BackgroundTransparency = 1.000
ScrollingFrame_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame_2.BorderSizePixel = 0
ScrollingFrame_2.Size = UDim2.new(1, 0, 0.949999988, 0)
ScrollingFrame_2.AutomaticCanvasSize = Enum.AutomaticSize.Y
ScrollingFrame_2.CanvasSize = UDim2.new(0, 0, 0, 0)
ScrollingFrame_2.ScrollBarThickness = 2

UIListLayout_8.Parent = ScrollingFrame_2
UIListLayout_8.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_8.SortOrder = Enum.SortOrder.LayoutOrder

LabelTemplate.Name = "LabelTemplate"
LabelTemplate.Parent = ScrollingFrame_2
LabelTemplate.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
LabelTemplate.BackgroundTransparency = 1.000
LabelTemplate.BorderColor3 = Color3.fromRGB(0, 0, 0)
LabelTemplate.BorderSizePixel = 0
LabelTemplate.Size = UDim2.new(0.949999988, 0, 0, 18)
LabelTemplate.Font = Enum.Font[Table.GuiSettings.GuiFont.Bold]
LabelTemplate.Text = "Animation Settings"
LabelTemplate.TextColor3 = Color3.fromRGB(230, 230, 230)
LabelTemplate.TextSize = 14.000
LabelTemplate.TextWrapped = true
LabelTemplate.Visible = false

Type.Name = "Type"
Type.Parent = LabelTemplate
Type.Value = "Label"

ButtonsTemplate.Name = "ButtonsTemplate"
ButtonsTemplate.Parent = ScrollingFrame_2
ButtonsTemplate.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ButtonsTemplate.BackgroundTransparency = 1.000
ButtonsTemplate.BorderColor3 = Color3.fromRGB(0, 0, 0)
ButtonsTemplate.BorderSizePixel = 0
ButtonsTemplate.Size = UDim2.new(0.899999976, 0, 0, 20)
ButtonsTemplate.Visible = false

Type_2.Name = "Type"
Type_2.Parent = ButtonsTemplate
Type_2.Value = "Bool"

SettingsName.Name = "SettingsName"
SettingsName.Parent = ButtonsTemplate
SettingsName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SettingsName.BackgroundTransparency = 1.000
SettingsName.BorderColor3 = Color3.fromRGB(0, 0, 0)
SettingsName.BorderSizePixel = 0
SettingsName.LayoutOrder = 1
SettingsName.Size = UDim2.new(0, 70, 0, 20)
SettingsName.Font = Enum.Font[Table.GuiSettings.GuiFont.Medium]
SettingsName.Text = "setting"
SettingsName.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsName.TextSize = 12.000
SettingsName.TextWrapped = true
SettingsName.TextXAlignment = Enum.TextXAlignment.Left

UIListLayout_9.Parent = ButtonsTemplate
UIListLayout_9.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_9.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_9.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_9.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_9.Padding = UDim.new(0, 5)

Button1.Name = "Button1"
Button1.Parent = ButtonsTemplate
Button1.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Button1.BackgroundTransparency = 1.000
Button1.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button1.BorderSizePixel = 0
Button1.LayoutOrder = 2
Button1.Position = UDim2.new(0.669753075, 0, 0.125, 0)
Button1.Size = UDim2.new(0, 40, 0, 15)
Button1.Font = Enum.Font[Table.GuiSettings.GuiFont.Regular]
Button1.Text = "Button1"
Button1.TextColor3 = Color3.fromRGB(255, 255, 255)
Button1.TextSize = 10.000
Button1.TextWrapped = true

UICorner_3.CornerRadius = UDim.new(1, 0)
UICorner_3.Parent = Button1

UIStroke_3.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_3.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_3.Thickness = 0.700
UIStroke_3.Transparency = 0.800
UIStroke_3.Parent = Button1

Button2.Name = "Button2"
Button2.Parent = ButtonsTemplate
Button2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Button2.BackgroundTransparency = 1.000
Button2.BorderColor3 = Color3.fromRGB(0, 0, 0)
Button2.BorderSizePixel = 0
Button2.LayoutOrder = 3
Button2.Position = UDim2.new(0.669753075, 0, 0.125, 0)
Button2.Size = UDim2.new(0, 40, 0, 15)
Button2.Font = Enum.Font[Table.GuiSettings.GuiFont.Regular]
Button2.Text = "Button2"
Button2.TextColor3 = Color3.fromRGB(255, 255, 255)
Button2.TextSize = 10.000
Button2.TextWrapped = true

UICorner_4.CornerRadius = UDim.new(1, 0)
UICorner_4.Parent = Button2

UIStroke_4.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_4.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_4.Thickness = 0.700
UIStroke_4.Transparency = 0.800
UIStroke_4.Parent = Button2

TextBoxTemplate.Name = "TextBoxTemplate"
TextBoxTemplate.Parent = ScrollingFrame_2
TextBoxTemplate.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBoxTemplate.BackgroundTransparency = 1.000
TextBoxTemplate.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBoxTemplate.BorderSizePixel = 0
TextBoxTemplate.Size = UDim2.new(0.899999976, 0, 0, 20)
TextBoxTemplate.Visible = false

Type_3.Name = "Type"
Type_3.Parent = TextBoxTemplate
Type_3.Value = "TextBox"

SettingsName_2.Name = "SettingsName"
SettingsName_2.Parent = TextBoxTemplate
SettingsName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SettingsName_2.BackgroundTransparency = 1.000
SettingsName_2.BorderColor3 = Color3.fromRGB(0, 0, 0)
SettingsName_2.BorderSizePixel = 0
SettingsName_2.Size = UDim2.new(0, 65, 0, 20)
SettingsName_2.Font = Enum.Font[Table.GuiSettings.GuiFont.Medium]
SettingsName_2.LayoutOrder = 1
SettingsName_2.Text = "setting"
SettingsName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsName_2.TextSize = 12.000
SettingsName_2.TextWrapped = true
SettingsName_2.TextXAlignment = Enum.TextXAlignment.Left

UIListLayout_10.Parent = TextBoxTemplate
UIListLayout_10.FillDirection = Enum.FillDirection.Horizontal
UIListLayout_10.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_10.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_10.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout_10.Padding = UDim.new(0, 5)

TextBoxParent.Name = "TextBoxParent"
TextBoxParent.Parent = TextBoxTemplate
TextBoxParent.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBoxParent.BackgroundTransparency = 1.000
TextBoxParent.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBoxParent.BorderSizePixel = 0
TextBoxParent.LayoutOrder = 2
TextBoxParent.Size = UDim2.new(0, 70, 0, 15)

TextBox.Parent = TextBoxParent
TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextBox.BackgroundTransparency = 1.000
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Size = UDim2.new(0.899999976, 0, 0, 15)
TextBox.ClearTextOnFocus = false
TextBox.Font = Enum.Font[Table.GuiSettings.GuiFont.Regular]
TextBox.PlaceholderText = "string"
TextBox.Text = ""
TextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
TextBox.TextSize = 10.000
TextBox.TextWrapped = true
TextBox.TextXAlignment = Enum.TextXAlignment.Left

UIStroke_5.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_5.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_5.Thickness = 0.700
UIStroke_5.Transparency = 0.800
UIStroke_5.Parent = TextBoxParent

UICorner_5.CornerRadius = UDim.new(1, 0)
UICorner_5.Parent = TextBoxParent

UIListLayout_11.Parent = TextBoxParent
UIListLayout_11.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout_11.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_11.VerticalAlignment = Enum.VerticalAlignment.Center

ModifyButton.Name = "ModifyButton"
ModifyButton.Parent = TextBoxTemplate
ModifyButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ModifyButton.BackgroundTransparency = 1.000
ModifyButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
ModifyButton.BorderSizePixel = 0
ModifyButton.LayoutOrder = 3
ModifyButton.Size = UDim2.new(0, 15, 0, 15)
ModifyButton.Image = "http://www.roblox.com/asset/?id=17648224301"

UICorner_6.CornerRadius = UDim.new(1, 0)
UICorner_6.Parent = ModifyButton

UIStroke_6.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_6.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_6.Thickness = 0.700
UIStroke_6.Transparency = 0.800
UIStroke_6.Parent = ModifyButton

UICorner_7.CornerRadius = UDim.new(0.0500000007, 0)
UICorner_7.Parent = Settings_2

UIStroke_7.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
UIStroke_7.Color = Color3.new(StringToColor3(Table.GuiSettings.UIStrokeColor))
UIStroke_7.Thickness = 0.700
UIStroke_7.Transparency = 0.800
UIStroke_7.Parent = Settings_2

-- Scripts:

for i, v in Settings:GetDescendants() do
    if v:IsA("ImageLabel") or v:IsA("ImageButton") then
        v.BackgroundTransparency = 1
        v.ImageTransparency = 1
    elseif v:IsA("UIStroke") then
        v.Transparency = 1
    elseif v:IsA("TextBox") or v:IsA("TextLabel") or v:IsA("TextButton") then
        v.TextTransparency = 1
        v.BackgroundTransparency = 1
    elseif v:IsA("Frame") then
        v.BackgroundTransparency = 1
    elseif v:IsA("ScrollingFrame") then
        v.BackgroundTransparency = 1
        v.ScrollBarImageTransparency = 1
    end
end

local BackFrame = game:GetService("CoreGui").VexHubFolder.VexHubScreenGui.BackFrame

function ReturnWallpaperSettingsAsImage(IdOrPath)
	if string.find(IdOrPath, ".png") then
		return getcustomasset(IdOrPath)
	else
		local Success, Error = pcall(function() 
			if game:GetService("MarketplaceService"):GetProductInfo(tonumber(IdOrPath)).AssetTypeId == 0 then end
		end)
	
		if Success then
			if game:GetService("MarketplaceService"):GetProductInfo(tonumber(IdOrPath)).AssetTypeId == 13 then
		       		return "https://www.roblox.com/asset-thumbnail/image?assetId="..IdOrPath.."&width=420&height=420&format=png"
		   	elseif game:GetService("MarketplaceService"):GetProductInfo(tonumber(IdOrPath)).AssetTypeId == 1 then
				return "rbxassetid://"..IdOrPath
			end
		end
	end
end

function NewTextBoxSetting(SettingName, SettingNameTextSize, TextBoxText, TextBoxPlaceHolderText, Function)
	local NewSetting = TextBoxTemplate:Clone()

	NewSetting.Name = SettingName
	NewSetting.Parent = ScrollingFrame_2
	NewSetting.Visible = true

	NewSetting.SettingsName.Text = SettingName
	NewSetting.SettingsName.TextSize = SettingNameTextSize
	NewSetting.TextBoxParent.TextBox.Text = TextBoxText
	NewSetting.TextBoxParent.TextBox.PlaceholderText = TextBoxPlaceHolderText

	NewSetting.ModifyButton.MouseButton1Down:Connect(function()
		pcall(Function)
	end)
end

function NewButtonsSetting(SettingName, SettingNameTextSize, Button1Text, Button1Function, Button2Text, Button2Function)
	local NewSetting = ButtonsTemplate:Clone()

	NewSetting.Name = SettingName
	NewSetting.Parent = ScrollingFrame_2
	NewSetting.Visible = true

	NewSetting.SettingsName.Text = SettingName
	NewSetting.SettingsName.TextSize = SettingNameTextSize
	NewSetting.Button1.Text = Button1Text
	NewSetting.Button2.Text = Button2Text

	NewSetting.Button1.MouseButton1Down:Connect(function()
		pcall(Button1Function)
	end)
	NewSetting.Button2.MouseButton1Down:Connect(function()
		pcall(Button2Function)
	end)
end

function NewLabel(Name)
	local NewLabel = LabelTemplate:Clone()

	NewLabel.Name = Name
	NewLabel.Parent = ScrollingFrame_2
	NewLabel.Text = Name
	NewLabel.Visible = true
end

local JSon = {}
function JSon:Encode(Table)
	return game:GetService("HttpService"):JSONEncode(Table)
end

function JSon:Decode(Table)
	return game:GetService("HttpService"):JSONDecode(Table)
end

function ModifySettings(SettingPath, TablePath, Value)
	local SettingsTable = JSon:Decode(tostring(readfile("VexHub/Settings.vex")))
	local SettingPathSplitted = string.split(SettingPath, ".")
	local TablePathSplitted = string.split(TablePath, ".")

	if (SettingPathSplitted[2]) then
		SettingsTable[SettingPathSplitted[1]][SettingPathSplitted[2]] = Value
	else
		SettingsTable[SettingPathSplitted[1]] = Value
	end

	if (TablePathSplitted[2]) then
		Table.GuiSettings[TablePathSplitted[1]][TablePathSplitted[2]] = Value
	else
		Table.GuiSettings[TablePathSplitted[1]] = Value
	end

	writefile("VexHub/Settings.vex", JSon:Encode(SettingsTable))
end

function CheckIfDecalOrImage(Id)
	local Success, Error = pcall(function() 
		if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 0 then end
	end)

	if Success then
		if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 1 or game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 13 then
			return true
		else
			return false
		end
	else
		return false
	end
end

function CheckIfAudio(Id)
	local Success, Error = pcall(function() 
		if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 0 then end
	end)

	if Success then
		if game:GetService("MarketplaceService"):GetProductInfo(tonumber(Id)).AssetTypeId == 3 then
			return true
		else
			return false
		end
	else
		return false
	end
end

function CheckIfNumber(string)
	local string = tonumber(string)

	if string then
		return true
	else
		return false
	end
end

function GetTextBoxTextContent(SettingName)
	return ScrollingFrame_2[SettingName].TextBoxParent.TextBox.ContentText
end

function StringToRGB(String)
	local RGB = string.split(String, ",")
	if (RGB[2]) or (RGB[3]) and not (RGB[4]) then
		if CheckIfNumber(RGB[1]) or CheckIfNumber(RGB[2]) or CheckIfNumber(RGB[3]) then
			if tonumber(RGB[1]) < 0 or tonumber(RGB[1]) > 255 or tonumber(RGB[2]) < 0 or tonumber(RGB[2]) > 255 or tonumber(RGB[3]) < 0 or tonumber(RGB[3]) > 255 then
				return false
			else
				return tonumber(RGB[1])..", "..tonumber(RGB[2])..", "..tonumber(RGB[3])
			end
		else
			return false
		end
	else
		return false
	end
end

function CheckIfFontExist(String)
	local IsFounded = false
	local Fonts = {
		Legacy = true,
		Arial = true,
		ArialBold = true,
		SourceSans = true,
		SourceSansBold = true,
		SourceSansLight = true,
		SourceSansItalic = true,
		Bodoni = true,
		Garamond = true,
		Cartoon = true,
		Code = true,
		Highway = true,
		SciFi = true,
		Arcade = true,
		Fantasy = true,
		Antique = true,
		SourceSansSemibold = true,
		Gotham = true,
		GothamMedium = true,
		GothamBold = true,
		GothamBlack = true,
		AmaticSC = true,
		Bangers = true,
		Creepster = true,
		DenkOne = true,
		Fondamento = true,
		FredokaOne = true,
		GrenzeGotisch = true,
		IndieFlower = true,
		JosefinSans = true,
		Jura = true,
		Kalam = true,
		LuckiestGuy = true,
		Merriweather = true,
		Michroma = true,
		Nunito = true,
		Oswald = true,
		PatrickHand = true,
		PermanentMarker = true,
		Roboto = true,
		RobotoCondensed = true,
		RobotoMono = true,
		Sarpanch = true,
		SpecialElite = true,
		TitilliumWeb = true,
		Ubuntu = true,
		BuilderSans = true,
		BuilderSansMedium = true,
		BuilderSansBold = true,
		BuilderSansExtraBold = true,
		Arimo = true,
		ArimoBold = true,
	}
	
	for i, v in Fonts do
		if string.lower(String) == string.lower(tostring(i)) and IsFounded == false then
			IsFounded = true
			return i
		end
	end
	
	if IsFounded == false then
		return false
	end
end

function CheckIfEasingStyleExist(String)
	local IsFounded = false
	local Styles = {
		Linear = true,
		Sine = true,
		Back = true,
		Quad = true,
		Quart = true,
		Quint = true,
		Bounce = true,
		Elastic = true,
		Exponential = true,
		Circular = true,
		Cubic = true,
	}
	
	for i, v in Styles do
		if string.lower(String) == string.lower(tostring(i)) and IsFounded == false then
			IsFounded = true
			return i
		end
	end
	
	if IsFounded == false then
		return false
	end
end

NewLabel("GUI Settings")

NewTextBoxSetting("Wallpaper", 12, Table.GuiSettings.Wallpaper, "Id or .png", function()
	local Value = GetTextBoxTextContent("Wallpaper")

	if string.find(Value, ".png") then
		if isfile(Value) then
			ModifySettings("Wallpaper", "Wallpaper", tostring(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
			BackFrame.Wallpaper = ReturnWallpaperSettingsAsImage(Value)
		else
			Notification:Create("File does not exist.", "Did not find "..Value.." in your exploits workspace.", 5)
		end
	elseif CheckIfNumber(Value) == true then
		if CheckIfDecalOrImage(Value) == true then
			ModifySettings("Wallpaper", "Wallpaper", tostring(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
			BackFrame.Wallpaper = ReturnWallpaperSettingsAsImage(Value)
		else
			Notification:Create("Id is not a decal or a image Id", "Did not find "..Value.." in the Roblox Creator Marketplace.", 5)
		end
	else
		Notification:Create("Failed to save!", "Please enter a valid Image or Decal Id or the path of the image.", 5)
	end
end)

NewTextBoxSetting("Wallpaper Background Color", 9, Table.GuiSettings.WallpaperBackgroundColor, "Number", function()
	local Value = GetTextBoxTextContent("Wallpaper Background Color")

	if StringToRGB(Value) ~= false then
		ModifySettings("WallpaperBackgroundColor", "WallpaperBackgroundColor", tostring(StringToRGB(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid RGB number", 5)
	end
end)

NewTextBoxSetting("UIScale", 12, Table.GuiSettings.GuiScale, "Number", function()
	local Value = GetTextBoxTextContent("UIScale")

	if CheckIfNumber(Value) == true then
		if tonumber(Value) < 0.7 or tonumber(Value) > 1.4 then
			Notification:Create("Failed to save!", "Please enter a number that is not less than 0.8 or more than 1.3", 5)
		else
			ModifySettings("GuiScale", "UIScale", tonumber(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
			BackFrame.UIScale.Scale = tonumber(Value)
		end
	else
		Notification:Create("Failed to save!", "Please enter a number that is not less than 0.8 or more than 1.3", 5)
	end
end)

NewTextBoxSetting("Background Gradient Color", 9, Table.GuiSettings.BackgroundGradientColor, "RGB Number", function()
	local Value = GetTextBoxTextContent("Background Gradient Color")

	if StringToRGB(Value) ~= false then
		ModifySettings("BackgroundGradientColor", "BackgroundGradientColor", tostring(StringToRGB(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid RGB number", 5)
	end
end)

NewTextBoxSetting("UIStroke Color", 10, Table.GuiSettings.UIStrokeColor, "RGB Number", function()
	local Value = GetTextBoxTextContent("UIStroke Color")

	if StringToRGB(Value) ~= false then
		ModifySettings("UIStrokeColor", "UIStrokeColor", tostring(StringToRGB(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid RGB number", 5)
	end
end)

NewTextBoxSetting("Frame Background Color", 7, Table.GuiSettings.GuiBackgroundColor, "RGB Number", function()
	local Value = GetTextBoxTextContent("Frame Background Color")

	if StringToRGB(Value) ~= false then
		ModifySettings("GuiBackgroundColor", "GuiBackgroundColor", tostring(StringToRGB(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid RGB number", 5)
	end
end)

NewLabel("Fonts Settings")

NewTextBoxSetting("Regular", 12, Table.GuiSettings.GuiFont.Regular, "Font", function()
	local Value = GetTextBoxTextContent("Regular")

	if CheckIfFontExist(Value) ~= false then
		ModifySettings("GuiFont.Regular", "GuiFont.Regular", tostring(CheckIfFontExist(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid font from Enum.Font", 5)
	end
end)

NewTextBoxSetting("Medium", 12, Table.GuiSettings.GuiFont.Medium, "Font", function()
	local Value = GetTextBoxTextContent("Medium")

	if CheckIfFontExist(Value) ~= false then
		ModifySettings("GuiFont.Medium", "GuiFont.Medium", tostring(CheckIfFontExist(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid font from Enum.Font", 5)
	end
end)

NewTextBoxSetting("Bold", 12, Table.GuiSettings.GuiFont.Bold, "Font", function()
	local Value = GetTextBoxTextContent("Bold")

	if CheckIfFontExist(Value) ~= false then
		ModifySettings("GuiFont.Bold", "GuiFont.Bold", tostring(CheckIfFontExist(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid font from Enum.Font", 5)
	end
end)

NewLabel("Animation Settings")

NewTextBoxSetting("Easing Style", 12, Table.GuiSettings.EasingStyle, "EasingStyle", function()
	local Value = GetTextBoxTextContent("Easing Style")

	if CheckIfEasingStyleExist(Value) ~= false then
		ModifySettings("EasingStyle", "EasingStyle", tostring(CheckIfEasingStyleExist(Value)))
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	else
		Notification:Create("Failed to save!", "Please enter a valid style from Enum.EasingStyle", 5)
	end
end)

NewTextBoxSetting("Animation Speed", 10, Table.GuiSettings.AnimationSpeed, "Number", function()
	local Value = GetTextBoxTextContent("Animation Speed")

	if CheckIfNumber(Value) == true then
		if tonumber(Value) < 0.4 or tonumber(Value) > 2 then
			Notification:Create("Failed to save!", "Please enter a number that is not less than 0.4 or more than 2", 5)
		else
			ModifySettings("AnimationSpeed", "AnimationSpeed", tonumber(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
		end
	else
		Notification:Create("Failed to save!", "Please enter a number that is not less than 0.4 or more than 2", 5)
	end
end)

NewLabel("Notification Settings")

NewTextBoxSetting("Volume", 12, Table.GuiSettings.NotificationVolume, "Number", function()
	local Value = GetTextBoxTextContent("Volume")

	if CheckIfNumber(Value) == true then
		if tonumber(Value) < 0 or tonumber(Value) > 1 then
			Notification:Create("Failed to save!", "Please enter a number that is not less than 0 or more than 1", 5)
		else
			ModifySettings("NotificationVolume", "NotificationVolume", tonumber(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
		end
	else
		Notification:Create("Failed to save!", "Please enter a number that is not less than 0 or more than 1", 5)
	end
end)

NewTextBoxSetting("Sound", 12, Table.GuiSettings.NotificationSound, "Id", function()
	local Value = GetTextBoxTextContent("Volume")

	if CheckIfNumber(Value) == true then
		if CheckIfAudio(Value) == true then
			ModifySettings("NotificationSound", "NotificationSound", tonumber(Value))
			Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
		else
			Notification:Create("Id is not a audio Id", "Did not find "..Value.." in the Roblox Creator Marketplace.", 5)
		end
	else
		Notification:Create("Failed to save!", "Please enter a valid audio Id.", 5)
	end
end)

NewButtonsSetting("Notifications", 
	12, 
	"Allow", 
	function()
		ModifySettings("Notifications", "Notifications", true)
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	end,
	"Forbid",
	function()
		ModifySettings("Notifications", "Notifications", false)
		Notification:Create("Settings modified and saved!", "Changed have been saved.", 5)
	end
)
